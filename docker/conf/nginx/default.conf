server {
    listen       80;
    listen  [::]:80;
    server_name  localhost;

    location / {
        return 301 http://localhost/nifi$request_uri;
    }

    location /nifi {
        proxy_pass http://nifi:8080/nifi;
        add_header Access-Control-Allow-Origin *;
        proxy_set_header X-ProxyScheme "http"; # the scheme to use to connect to the proxy
        proxy_set_header X-ProxyHost $http_host; # the host of the proxy
        proxy_set_header X-ProxyPort "8080"; # the port the proxy is listening on
    }

}

server {
    listen 8080;

    location / {
        # Proxy the request to the NiFi backend server
        proxy_pass http://nifi:8080;

        # Pass headers to handle the proxy correctly
        proxy_set_header Host "nifi";
        proxy_set_header X-ProxyScheme "http";
        proxy_set_header X-ProxyHost $http_host;
        proxy_set_header X-ProxyPort "8080";

        # Add necessary CORS headers for the response
        add_header Access-Control-Allow-Origin "*";
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, PUT, DELETE";
        add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With";

        # Handle CORS preflight requests
        if ($request_method = OPTIONS) {
            add_header Access-Control-Allow-Origin "*";
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, PUT, DELETE";
            add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With, request-token";
            add_header Access-Control-Max-Age 86400;
            return 204; # No content
        }
    }

}

server {
    listen 8081;

    location / {
        # Proxy the request to the NiFi http server
        proxy_pass http://nifi:8081;

        # Pass headers to handle the proxy correctly
        proxy_set_header Host "nifi";
        proxy_set_header X-ProxyScheme "http";
        proxy_set_header X-ProxyHost $http_host;
        proxy_set_header X-ProxyPort "8081";
    }

}
